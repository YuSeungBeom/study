# 로그인 UI화면 만들기 #

<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href='//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSansNeo.css' rel='stylesheet' type='text/css'>
    <style>
        .log-in-area {
            width: 350px;
            height: 140px;
            border: 1px solid #dbdbdb;
            border-radius: 5px;
            background-color: #ffffff;
            padding-left: 16px;
        }

        .login-text {
            font-family: 'Spoqa Han Sans Neo', 'sans-serif';
            font-size: 12px;
            font-weight: 400;
            line-height: 15.02px;
        }

        .login-button {
            display: block;
            font-family: 'Spoqa Han Sans Neo', 'sans-serif';
            color: #ffffff;
            width: 318px;
            height: 40px;
            background-color: #711bff;
            border: 1px solid #dbdbdb;
        }

        .weniv-logo {
            width: 64px;
        }

        .options {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            margin-top: 10px;
        }

        .option-button {
            border: none;
            background-color: #ffffff;
            font-family: 'Spoqa Han Sans Neo', 'sans-serif';
            color: #767676;
        }
    </style>
</head>

<body>
    <div class="log-in-area">
        <p class="login-text">더 편리해진 위니브에 오신 것을 환영합니다.</p>
        <button class="login-button"><img src="weniv-logo.png" class="weniv-logo" />&nbsp&nbsp&nbsp로그인</button>
        <div class="options">
            <div>
                <img src="icon-lock.png" alt=""><button class="option-button">아이디</button><span>|</span><button
                    class="option-button">비밀번호찾기</button>
            </div>
            <div>
                <img src="icon-user.png" alt=""><button class="option-button">회원가입</button>
            </div>
        </div>
    </div>
</body>

</html>

-------------------------------------------------------------------------------------------------------------------

# 드래그 앤 드롭 #

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        #product-list,
        #cart {
            border: 2px solid #ccc;
            padding: 20px;
        }

        #product-list {
            background-color: #f9f9f9;
        }

        #cart {
            background-color: #fff;
        }

        .product {
            padding: 10px;
            margin-bottom: 10px;
            background-color: #e1f5fe;
            cursor: grab;
        }

        .product:active {
            cursor: grabbing;
        }

        #cart.drag-over {
            background-color: teal
        }
    </style>
</head>

<body>
    <h2>제품 목록</h2>
    <div id="product-list">
        <div class="product" draggable="true">상품 1</div>
        <div class="product" draggable="true">상품 2</div>
        <div class="product" draggable="true">상품 3</div>
        <div class="product" draggable="true">상품 4</div>
    </div>

    <h2>장바구니</h2>
    <div id="cart">
        <p>장바구니가 비어 있습니다.</p>
    </div>


    <script>
        const products = document.querySelectorAll('.product');
        const cart = document.querySelector('#cart');

        products.forEach((product) => {
            product.addEventListener('dragstart', (event) => {
                event.dataTransfer.setData('text/plain', event.target.textContent);
            });
        });

        cart.addEventListener('dragover', (event) => {
            event.preventDefault();
            cart.classList.add('drag-over');
        });

        cart.addEventListener('dragleave', () => {
            cart.classList.remove('drag-over');
        });

        cart.addEventListener('drop', (event) => {
            cart.classList.remove('drag-over');
            const productName = event.dataTransfer.getData('text/plain');

            if (cart.querySelector('p')) {
                cart.innerHTML = '';
            }

            const item = document.createElement('div');
            item.textContent = productName;
            cart.append(item);
        }); 
    </script>
</body>

</html>

__________________________________________________________________________________________

# scroll #

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scroll Tracking</title>
    <style>
        body {
            padding: 20px;
        }

        #progress-container {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background: white;
            padding: 15px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        progress {
            width: 100%;
            height: 8px;
            border-radius: 4px;
            border: none;
        }

        .section {
            margin: 80px 20px 20px 20px;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            transition: all 0.3s ease;
            position: relative;
        }

        .section.read {
            background-color: #f8fff8;
            border-color: #4CAF50;
        }

        .section-status {
            position: absolute;
            top: 20px;
            right: 20px;
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 14px;
            background: #ddd;
            transition: all 0.3s ease;
        }

        .section.read .section-status {
            background: #4CAF50;
            color: white;
        }

        .content {
            height: 300px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            color: #666;
        }

        #progress-text {
            text-align: right;
            font-weight: bold;
            color: #4CAF50;
        }
    </style>
</head>

<body>
    <div id="progress-container">
        <progress id="reading-progress" value="0" max="100"></progress>
        <div id="progress-text">0%</div>
    </div>

    <div class="section" data-section-id="1">
        <span class="section-status">읽지 않음</span>
        <h2>섹션 1: 소개</h2>
        <div class="content">첫 번째 섹션입니다. 스크롤해서 읽어보세요!</div>
    </div>

    <div class="section" data-section-id="2">
        <span class="section-status">읽지 않음</span>
        <h2>섹션 2: 본문</h2>
        <div class="content">두 번째 섹션입니다.</div>
    </div>

    <div class="section" data-section-id="3">
        <span class="section-status">읽지 않음</span>
        <h2>섹션 3: 설명</h2>
        <div class="content">세 번째 섹션입니다.</div>
    </div>

    <div class="section" data-section-id="4">
        <span class="section-status">읽지 않음</span>
        <h2>섹션 4: 웹 개발 기초</h2>
        <div class="content">HTML, CSS, JavaScript는 웹 개발의 기초입니다.</div>
    </div>

    <div class="section" data-section-id="5">
        <span class="section-status">읽지 않음</span>
        <h2>섹션 5: 프론트엔드 프레임워크</h2>
        <div class="content">React, Vue, Angular에 대해 알아보겠습니다.</div>
    </div>

    <div class="section" data-section-id="6">
        <span class="section-status">읽지 않음</span>
        <h2>섹션 6: 웹 성능 최적화</h2>
        <div class="content">성능 최적화는 사용자 경험의 핵심입니다.</div>
    </div>

    <div class="section" data-section-id="7">
        <span class="section-status">읽지 않음</span>
        <h2>섹션 7: 반응형 디자인</h2>
        <div class="content">모든 디바이스에서 완벽한 경험을 제공하세요.</div>
    </div>

    <div class="section" data-section-id="8">
        <span class="section-status">읽지 않음</span>
        <h2>섹션 8: 웹 접근성</h2>
        <div class="content">모두가 사용할 수 있는 웹을 만들어봅시다.</div>
    </div>

    <script>
        const progress = document.getElementById('reading-progress');
        const progressText = document.getElementById('progress-text');
        const sections = document.querySelectorAll('.section');

        window.addEventListener('scroll', () => {
            const totalHeight = document.documentElement.scrollHeight - window.innerHeight;
            const scrolled = window.scrollY;
            const progressValue = (scrolled / totalHeight) * 100;
            progress.value = progressValue;
            progressText.textContent = `${Math.round(progressValue)}%`;

            sections.forEach(section => {
                const rect = section.getBoundingClientRect();
                if (rect.top >= 0 && rect.top <= window.innerHeight * 0.45) {
                    section.classList.add('read');
                    section.querySelector('.section-status').textContent = '읽음';
                }
            });
        });
    </script>
</body>

</html>
