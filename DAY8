#연습문제#


# a=1
# b=3
# b=a

# print(id(a))
# print(id(b))

# -----------------------------------

# 문제: 정수들이 담긴 리스트가 주어질 때, 각 정수를 3배로 만들어 반환하는 함수를 작성하세요.
# map() 함수를 사용해야 합니다.

# 입력 예시: [1, 2, 3, 4, 5]
# 출력 예시: [3, 6, 9, 12, 15]

# 요구사항:
# 1. map() 함수를 사용하세요
# 2. multiply_by_three 함수를 정의하여 사용하세요



# def multiply_By_three(x):
#     return x * 3

# def triple_elements(input_list):
#     return list(map(multiply_By_three, input_list))

# input_list = [1, 2, 3, 4, 5]

# output_list = triple_elements(input_list)
# print(output_list)

# ---------------------------------------


# test 라는 익명함수를 만들어요
# 이 함수는 문자열을 받아서 대문자로 바꿔줍니다.
# 결과를 출력하세요


# test = lambda x: x.upper()

# input_str = "hello world"

# print(test(input_str))

# ----------------------------------------


# 1. map,list,lamda를 쓴다
# 2. 리스트의 각 요소에 2의 배수이면 2를 곱하고, 2의 배수가 아니면 1을 더한다.
# 3. map과 lamda를 사용하여 한줄로 작성한다.


# i_list = [1, 2, 3, 4, 5, 6]

# o_list = list(map(lambda x: x * 2 if x % 2 == 0 else x + 1, i_list))

# print(o_list)

# -------------------------------------------

# 숫자 = [1, 2, 3, 4, 5]
# 승수 = [2, 2, 2, 3, 3]


#문제
#1. 숫자의 승수를 zip으로 맵핑해서 진행하세요.
#2. 숫자를 승수만큼 제곱하여 결과값을 표현해주세요.
#3. 승수한 값이 100이상인 값을 출력하세요.
#4. 승수한 값을 모두 더하세요.


# # 1.
# li = list(zip(숫자, 승수))


# def test(x):
#     return x >= 100

# def test1(x: tuple):
#     return x[0] ** x[1]


# a = list(map(test1, li))
# print(a)
# b = list(filter(test,a))
# print(b)

# ---------------------------------

# 문제: 학생들의 시험 점수가 담긴 딕셔너리를 점수에 따라 정렬하세요.
# sorted() 함수와 람다 함수를 함께 사용해야 합니다.

# 요구사항:
# 1. sorted() 함수를 사용하세요
# 2. 람다 함수를 key 매개변수로 사용하세요
# 3. 점수가 높은 순서대로 정렬하세요(내림차순)
# 4. 결과는 [(학생이름, 점수)] 형태의 리스트여야 합니다

# 예시:
# scores = {
#     "Alice": 85,
#     "Bob": 92,
#     "Charlie": 78,
#     "David": 95
# }
# 결과: [('David', 95), ('Bob', 92), ('Alice', 85), ('Charlie', 78)]

# 힌트:
# - sorted()의 key 매개변수는 정렬 기준을 지정합니다
# - 딕셔너리의 .items() 메서드를 사용하면 (키, 값) 쌍을 얻을 수 있습니다
# - reverse=True 매개변수로 내림차순 정렬이 가능합니다




# 학생들의 시험 점수가 담긴 딕셔너리
# scores = {
#     "Alice": 85,
#     "Bob": 92,
#     "Charlie": 78,
#     "David": 95
# }

# # sorted() 함수와 람다 함수를 사용하여 점수에 따라 내림차순 정렬
# sorted_scores = sorted(scores.items(), key=lambda x: x[1], reverse=True)

# # 결과 출력
# print(sorted_scores)

# --------------------------------------------------------------

# import os

# a = "a" if os.path.exists("python.txt") else "w"
# f = open("python.txt", a)
# s = ""
# for i in range(1, 6):
#     s += f"{i}명 참여 중입니다. \n"
# f.write(s)
# f.close()

# ----------------------------------------------------------------

# f = open("python.txt", "r")
# lines = f.readlines()
# lines = list(map(lambda x: x.replace("참여", "띠용"), lines))
# for line in lines:
#     print(line)
# f.close()
